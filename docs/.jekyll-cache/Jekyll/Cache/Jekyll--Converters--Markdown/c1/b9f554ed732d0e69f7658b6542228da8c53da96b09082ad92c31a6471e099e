I"ð<p>By default, there are named colors called <code class="highlighter-rouge">blue</code>, <code class="highlighter-rouge">orange</code>, <code class="highlighter-rouge">green</code>, <code class="highlighter-rouge">red</code>, <code class="highlighter-rouge">purple</code>, <code class="highlighter-rouge">brown</code>, <code class="highlighter-rouge">magenta</code>, <code class="highlighter-rouge">grey</code> or <code class="highlighter-rouge">gray</code>, and <code class="highlighter-rouge">olive</code>. These correspond to the colors in <a href="https://github.com/d3/d3-scale-chromatic#schemeCategory10" target="_blank">d3.schemeCategory10</a>. Circle <em>A</em> below is colored this way.</p>

<p>Because d3 is available, you can access other d3 color functions; for example, circle <em>B</em> uses the purple in the <code class="highlighter-rouge">d3.schemeDark2</code> palette.</p>

<p>You can specify a hex color code (as in circle <em>C</em>) and RGB color code (as in circle <em>D</em>); however, notice that the hex codes need to be wrapped in double quotes and <em>then</em> single quotes in order to be read properly!</p>

<div width="500" height="416" class="codePreview">

layout:
  OneGraph:
    graph:
      objects:
      - Circle:
          center: [3,7]
          color: red
          label: {text: A}
      - Circle:
          center: [7,7]
          color: d3.schemeDark2[2]
          label: {text: B}
      - Circle:
          center: [3,3]
          color: "'#224466'"
          label: {text: C}
      - Circle:
          center: [7,3]
          color: rgb(245, 215, 66)
          label: {text: D}
         

</div>

<p>You can specify names of colors in the <code class="highlighter-rouge">colors</code> attribute and use them for multiple objects:</p>

<div width="500" height="410" class="codePreview">

colors:
  PurpleCow: rgb(81,38,152)
  GarnetRed: "'#781C2E'"
layout:
  OneGraph:
    graph:
      objects:
      - Circle:
          center: [5,5]
          color: PurpleCow
      - Arrow:
          begin: [2,2]
          end: [8,2]
          color: GarnetRed
         

</div>

<p>Some objects can have both a <code class="highlighter-rouge">stroke</code> color (for lines/curves) and a <code class="highlighter-rouge">fill</code> color (to fill an area). If you just use <code class="highlighter-rouge">color</code> as an attribute, it will use that color for both of these. However, if you want a <em>different</em> color for the stroke and fill, you need to specify them separately:</p>

<div width="500" height="410" class="codePreview">

layout:
  OneGraph:
    graph:
      objects:
      
      # color not specified (blue is default)
      - Circle:
          center: [2,5]
          
      # red specified, used for stroke and fill
      - Circle:
          center: [5,5]
          color: red
          
      # different stroke and fill colors specified
      - Circle:
          center: [8,5]
          stroke: blue
          fill: red        

</div>

<p>Note that each shape type has a default color (points and circles are blue, lines are orange, etc.) so that they show up even if you donâ€™t specify a color.</p>

<h2 id="stroke-attributes">Stroke attributes</h2>

<p>Besides colors, strokes can have different attributes:</p>
<ul>
  <li><code class="highlighter-rouge">strokeWidth</code> sets the thickness of the stroke (in pixels); the default is 1</li>
  <li><code class="highlighter-rouge">lineStyle</code> sets the style of drawing to <code class="highlighter-rouge">solid</code> (the default), <code class="highlighter-rouge">dashed</code>, or <code class="highlighter-rouge">dotted</code></li>
</ul>

<div width="500" height="410" class="codePreview">

layout:
  OneGraph:
    graph:
      objects:
      
      # default
      - Line: {yIntercept: 10}
          
      # thin
      - Line: {strokeWidth: 0.5, yIntercept: 8}
          
      # thick
      - Line: {strokeWidth: 10, yIntercept: 6}
          
      # dashed
      - Line: {lineStyle: dashed, yIntercept: 4}
          
      # dotted
      - Line: {lineStyle: dotted, yIntercept: 2}

</div>

<h2 id="fill-attributes">Fill attributes</h2>

<p>Besides colors, fills can also have different attributes:</p>
<ul>
  <li><code class="highlighter-rouge">opacity</code> determines how transparent a fill is; by default, it is set to 0.2 (20%)</li>
  <li>future feature: <code class="highlighter-rouge">fillPattern</code></li>
</ul>

<div width="500" height="416" class="codePreview">

layout:
  OneGraph:
    graph:
      objects:
      
      # default opacity (0.2)
      - Circle:
          center: [2,5]
          
      # medium opacity (0.5)
      - Circle:
          center: [5,5]
          opacity: 0.5
          
      # not opaque at all (1)   
      - Circle:
          center: [8,5]
          opacity: 1        

</div>
:ET